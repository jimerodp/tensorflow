diff --git a/third_party/llvm/generated.patch b/third_party/llvm/generated.patch
index 42c4138..06d4433 100644
--- a/third_party/llvm/generated.patch
+++ b/third_party/llvm/generated.patch
@@ -1,35 +1,55 @@
 Auto generated patch. Do not edit or delete it, even if empty.
-diff -ruN --strip-trailing-cr a/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp b/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp
---- a/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp
-+++ b/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp
-@@ -63,6 +63,12 @@
-         "outgoing name should be "
-         "<regalloc-evict-interactive-channel-base>.out"));
+diff -ruN --strip-trailing-cr a/utils/bazel/llvm-project-overlay/mlir/BUILD.bazel b/utils/bazel/llvm-project-overlay/mlir/BUILD.bazel
+--- a/utils/bazel/llvm-project-overlay/mlir/BUILD.bazel
++++ b/utils/bazel/llvm-project-overlay/mlir/BUILD.bazel
+@@ -5167,6 +5167,7 @@
+         ":FuncDialect",
+         ":FunctionInterfaces",
+         ":GPUDialect",
++        ":GPUUtils",
+         ":IR",
+         ":LinalgDialect",
+         ":MemRefDialect",
+@@ -5795,6 +5796,7 @@
+         ":ExecutionEngineUtils",
+         ":FuncDialect",
+         ":GPUDialect",
++        ":GPUUtils",
+         ":GPUPassIncGen",
+         ":GPUToLLVMIRTranslation",
+         ":IR",
+@@ -5829,6 +5831,26 @@
+     ]),
+ )
  
-+static cl::opt<unsigned>
-+    MaxCascade("mlregalloc-max-cascade", cl::Hidden,
-+               cl::desc("The maximum number of times a live range can be "
-+                        "evicted before preventing it from being evicted"),
-+               cl::init(20));
++cc_library(
++    name = "GPUUtils",
++    srcs = glob(
++        [
++            "lib/Dialect/GPU/Utils/*.cpp",
++        ],
++    ),
++    hdrs = glob(["include/mlir/Dialect/GPU/Utils/*.h"]),
++    includes = ["include"],
++    deps = [
++      ":AffineDialect",
++      ":ArithDialect",
++      ":GPUDialect",
++      ":IR",
++      ":Support",
++      ":VectorDialect",
++      "//llvm:Support",
++    ],
++)
 +
- // Options that only make sense in development mode
- #ifdef LLVM_HAVE_TFLITE
- #include "RegAllocScore.h"
-@@ -643,8 +649,16 @@
-            RegClassInfo.getNumAllocatableRegs(MRI->getRegClass(VirtReg.reg())) <
-                RegClassInfo.getNumAllocatableRegs(
-                    MRI->getRegClass(Intf->reg())));
--      // Only evict older cascades or live ranges without a cascade.
-+
-       unsigned IntfCascade = RA.getExtraInfo().getCascade(Intf->reg());
-+      // There is a potential that the model could be adversarial and
-+      // continually evict live ranges over and over again, leading to a
-+      // large amount of compile time being spent in regalloc. If we hit the
-+      // threshold, prevent the range from being evicted.
-+      if (IntfCascade >= MaxCascade)
-+        return false;
-+
-+      // Only evict older cascades or live ranges without a cascade.
-       if (Cascade <= IntfCascade) {
-         if (!Urgent)
-           return false;
+ td_library(
+     name = "GPUTransformOpsTdFiles",
+     srcs = [
+@@ -6188,6 +6210,7 @@
+         ":FuncToLLVM",
+         ":GPUCommonTransforms",
+         ":GPUDialect",
++        ":GPUUtils",
+         ":GPUTransforms",
+         ":IR",
+         ":LLVMCommonConversion",
diff --git a/third_party/llvm/workspace.bzl b/third_party/llvm/workspace.bzl
index 094e568..323bcb6 100644
--- a/third_party/llvm/workspace.bzl
+++ b/third_party/llvm/workspace.bzl
@@ -4,8 +4,8 @@ load("//third_party:repo.bzl", "tf_http_archive")
 
 def repo(name):
     """Imports LLVM."""
-    LLVM_COMMIT = "5e53a8dadb0019ee87936c1278fa222781257005"
-    LLVM_SHA256 = "eb8e26186a8f7e15e59d37729353525d2367272c9f053d2ef1a2c1e292b8b688"
+    LLVM_COMMIT = "bc29fc937c6cb4a210f80c93c79fc6ed97c801f8"
+    LLVM_SHA256 = "c52784eddf958532cb617befe65df12a7a350b7eacf0532c3a61efc921b2142c"
 
     tf_http_archive(
         name = name,
